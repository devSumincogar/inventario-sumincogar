// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SumincogarBackend.Contexts;

#nullable disable

namespace SumincogarBackend.Migrations
{
    [DbContext(typeof(db_a977c3_sumincogarContext))]
    [Migration("20230411193321_SistemaUsuarios")]
    partial class SistemaUsuarios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Catalogo", b =>
                {
                    b.Property<int>("Catalogoid")
                        .HasColumnType("int")
                        .HasColumnName("CATALOGOID");

                    b.Property<string>("Catalogourl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CATALOGOURL");

                    b.Property<string>("Imagenreferencial")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMAGENREFERENCIAL");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Catalogoid");

                    b.ToTable("CATALOGO", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Categorium", b =>
                {
                    b.Property<int>("Categoriaid")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIAID");

                    b.Property<string>("Categorianombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CATEGORIANOMBRE");

                    b.HasKey("Categoriaid");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Detalleinventario", b =>
                {
                    b.Property<int>("Detalleinventarioid")
                        .HasColumnType("int")
                        .HasColumnName("DETALLEINVENTARIOID");

                    b.Property<string>("Codcliente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODCLIENTE");

                    b.Property<string>("Codproducto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODPRODUCTO");

                    b.Property<string>("Colores")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("COLORES");

                    b.Property<string>("Impresion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IMPRESION");

                    b.Property<string>("Stock")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STOCK");

                    b.HasKey("Detalleinventarioid");

                    b.ToTable("DETALLEINVENTARIO", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Imagenreferencial", b =>
                {
                    b.Property<int>("Imagenreferencialid")
                        .HasColumnType("int")
                        .HasColumnName("IMAGENREFERENCIALID");

                    b.Property<string>("Imagenreferencialurl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMAGENREFERENCIALURL");

                    b.Property<int?>("Productoid")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCTOID");

                    b.HasKey("Imagenreferencialid");

                    b.HasIndex(new[] { "Productoid" }, "RELATIONSHIP_2_FK");

                    b.ToTable("IMAGENREFERENCIAL", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Parametrotecnico", b =>
                {
                    b.Property<int>("Parametrotecnicoid")
                        .HasColumnType("int")
                        .HasColumnName("PARAMETROTECNICOID");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CLAVE");

                    b.Property<int?>("Productoid")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCTOID");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALOR");

                    b.HasKey("Parametrotecnicoid");

                    b.HasIndex(new[] { "Productoid" }, "RELATIONSHIP_3_FK");

                    b.ToTable("PARAMETROTECNICO", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Producto", b =>
                {
                    b.Property<int>("Productoid")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCTOID");

                    b.Property<int?>("Categoriaid")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIAID");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Fichatenicapdf")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("FICHATENICAPDF");

                    b.Property<string>("Imagenreferencial")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMAGENREFERENCIAL");

                    b.Property<string>("Productonombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PRODUCTONOMBRE");

                    b.HasKey("Productoid");

                    b.HasIndex(new[] { "Categoriaid" }, "RELATIONSHIP_1_FK");

                    b.ToTable("PRODUCTO", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Promocion", b =>
                {
                    b.Property<int>("Promocionid")
                        .HasColumnType("int")
                        .HasColumnName("PROMOCIONID");

                    b.Property<DateTime>("Fechacaducidad")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHACADUCIDAD");

                    b.Property<DateTime>("Fechaingreso")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHAINGRESO");

                    b.Property<string>("Imagenprincipal")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMAGENPRINCIPAL");

                    b.Property<bool>("Prioridad")
                        .HasColumnType("bit")
                        .HasColumnName("PRIORIDAD");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TITULO");

                    b.HasKey("Promocionid");

                    b.ToTable("PROMOCION", (string)null);
                });

            modelBuilder.Entity("SumincogarBackend.Models.Promocionimagen", b =>
                {
                    b.Property<int>("Promocionimagenid")
                        .HasColumnType("int")
                        .HasColumnName("PROMOCIONIMAGENID");

                    b.Property<int>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("ORDEN");

                    b.Property<int?>("Promocionid")
                        .HasColumnType("int")
                        .HasColumnName("PROMOCIONID");

                    b.Property<string>("Promocionimagenurl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PROMOCIONIMAGENURL");

                    b.HasKey("Promocionimagenid");

                    b.HasIndex(new[] { "Promocionid" }, "RELATIONSHIP_4_FK");

                    b.ToTable("PROMOCIONIMAGEN", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SumincogarBackend.Models.Imagenreferencial", b =>
                {
                    b.HasOne("SumincogarBackend.Models.Producto", "Producto")
                        .WithMany("Imagenreferencials")
                        .HasForeignKey("Productoid")
                        .HasConstraintName("FK_IMAGENRE_RELATIONS_PRODUCTO");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SumincogarBackend.Models.Parametrotecnico", b =>
                {
                    b.HasOne("SumincogarBackend.Models.Producto", "Producto")
                        .WithMany("Parametrotecnicos")
                        .HasForeignKey("Productoid")
                        .HasConstraintName("FK_PARAMETR_RELATIONS_PRODUCTO");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SumincogarBackend.Models.Producto", b =>
                {
                    b.HasOne("SumincogarBackend.Models.Categorium", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("Categoriaid")
                        .HasConstraintName("FK_PRODUCTO_RELATIONS_CATEGORI");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SumincogarBackend.Models.Promocionimagen", b =>
                {
                    b.HasOne("SumincogarBackend.Models.Promocion", "Promocion")
                        .WithMany("Promocionimagens")
                        .HasForeignKey("Promocionid")
                        .HasConstraintName("FK_PROMOCIO_RELATIONS_PROMOCIO");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("SumincogarBackend.Models.Categorium", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SumincogarBackend.Models.Producto", b =>
                {
                    b.Navigation("Imagenreferencials");

                    b.Navigation("Parametrotecnicos");
                });

            modelBuilder.Entity("SumincogarBackend.Models.Promocion", b =>
                {
                    b.Navigation("Promocionimagens");
                });
#pragma warning restore 612, 618
        }
    }
}
